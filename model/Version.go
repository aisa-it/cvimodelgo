// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package model

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Version struct {
	_tab flatbuffers.Struct
}

func (rcv *Version) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Version) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Version) Major_() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Version) MutateMajor_(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Version) Minor_() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *Version) MutateMinor_(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func (rcv *Version) SubMinor() byte {
	return rcv._tab.GetByte(rcv._tab.Pos + flatbuffers.UOffsetT(2))
}
func (rcv *Version) MutateSubMinor(n byte) bool {
	return rcv._tab.MutateByte(rcv._tab.Pos+flatbuffers.UOffsetT(2), n)
}

func CreateVersion(builder *flatbuffers.Builder, major_ byte, minor_ byte, subMinor byte) flatbuffers.UOffsetT {
	builder.Prep(1, 3)
	builder.PrependByte(subMinor)
	builder.PrependByte(minor_)
	builder.PrependByte(major_)
	return builder.Offset()
}
